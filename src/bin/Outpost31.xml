<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Outpost31</name>
    </assembly>
    <members>
        <member name="T:Outpost31.Core.Avatar.Environment">
            <summary>Avatar environment details.</summary>
            <seealso href="https://github.com/spectrum-health-systems/tingen-documentation-project">Tingen Documentation Project</seealso>
        </member>
        <member name="P:Outpost31.Core.Avatar.Environment.AvtrSys">
            <summary>The Avatar System that the Tingen Web Service will interface with.</summary>
            <remarks>
                The Avatar <i>System</i> determines what Avatar environment the Tingen Web Service will interface with.<br/>
                <br/>
                Netsmart defines the following Avatar Systems when deploying Avatar at an organization:
                <list type="bullet">
                    <item>LIVE</item>
                    <item>UAT</item>
                    <item>SBOX</item>
                    <item>BUILD</item>
                </list>
            </remarks>
            <value>The Tingen Web Service works with the "LIVE" or "UAT" Avatar Systems.</value>
        </member>
        <member name="P:Outpost31.Core.Avatar.Environment.AvtrSysCode">
            <summary>The Avatar System Code used to login to Avatar.</summary>
            <remarks>
                The Avatar <i>System Code</i> determines(in part) what Avatar functionality a user has access to while they are logged into an Avatar <i>System</i>.<br/>
                <br/>
                Organizations may have many different Avatar <i>System Codes</i>, but only a few Avatar <i>Systems</i>.<br/>
                In addition, the Avatar System Code may be similar or the same as the Avatar System.<br/>
            </remarks>
        </member>
        <member name="T:Outpost31.Core.Avatar.ScriptParameter">
            <summary>Script parameter logic</summary>
            <seealso href="https://github.com/spectrum-health-systems/tingen-documentation-project/blob/main/static/avtr/script-param.md">The Script Parameter</seealso>
            <seealso href="https://github.com/spectrum-health-systems/tingen-documentation-project">Tingen Documentation Project</seealso>
        </member>
        <member name="P:Outpost31.Core.Avatar.ScriptParameter.Original">
            <summary>The original script parameter sent from Avatar.</summary>
        </member>
        <member name="M:Outpost31.Core.Avatar.ScriptParameter.Request(Outpost31.Core.Session.WsvcSession)">
            <summary>Processes a request based on the parameters provided in the specified session.</summary>
            <remarks>
                None yet.
            </remarks>
            <param name="wsvcSession">The session object containing the request parameters and runtime settings</param>
        </member>
        <member name="M:Outpost31.Core.Avatar.ScriptParameter.CheckExistance(System.String)">
            <summary>Validates whether the provided script parameter is null, empty, or consists only of white-space characters.</summary>
            <param name="origParam">The script parameter to validate.</param>
            <returns>A message indicating whether the provided script parameter exists or does not exist.</returns>
        </member>
        <member name="T:Outpost31.Core.Avatar.OptionObject">
            <summary>OptionObject logic.</summary>
            <remarks>
                The OptionObject holds all of the content of and metadata describing the<br/>
                calling myAvatar form.
             </remarks>
            <seealso href="https://github.com/spectrum-health-systems/tingen-documentation-project">Tingen Documentation Project</seealso>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObject.Original">
            <summary>The original OptionObject sent from Avatar.</summary>
            <remarks>This is <i>never</i> modified during a Tingen Web Service session.</remarks>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObject.Worker">
            <summary>The OptionObject work is done.</summary>
            <remarks>This object is <i>potentially</i> modified during a Tingen Web Service session.</remarks>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObject.Finalized">
            <summary>The finalized OptionObject that is returned to Avatar.</summary>
            <remarks>This is the finalized WorkOptObj, ready to be returned to Avatar.</remarks>
        </member>
        <member name="P:Outpost31.Core.Avatar.OptionObject.ExeAsm">
            <summary>The executing Assembly name.</summary>
            <remarks>A required component for writing log files, defined here so it can be used throughout the class.</remarks>
        </member>
        <member name="M:Outpost31.Core.Avatar.OptionObject.Finalize(Outpost31.Core.Session.WsvcSession,System.Int32,System.String)">
            <summary>Finalize an OptionObject so it can be returned to Avatar.</summary>
            <remarks>
                <para>
                    An OptionObject must be finalized before being returned to Avatar.<br />
                    <br />
                    The <see cref="M:ScriptLinkStandard.Objects.OptionObject2015.ToReturnOptionObject(System.Int32,System.String)" /> method:
                    <list type="bullet">
                        <item>Ensures that all required components of the OptionObject are valid</item>
                        <item>Assigns an error code to the object</item>
                        <item>Assigns an error message to the object</item>
                    </list> 
                </para>
                <para>
            The <c>error code</c> must be one of the following:
            <list type="bullet">
                <item>
                    <term>0</term>
                    <description>No action taken</description>
                </item>
                <item>
                    <term>1</term>
                    <description>Returns an Error Message with an "Ok" button, and stops further processing of scripts.</description>
                </item>
                <item>
                    <term>2</term>
                    <description>Returns an Error Message with "OK" and "Cancel" buttons, and stops further scripts the user clicks "Cancel"</description>
                </item>
                <item>
                    <term>3</term>
                    <description>Returns an Error Message with "Ok" button</description>
                </item>
                <item>
                    <term>4</term>
                    <description> Returns an Error Message with "Yes" and "No" buttons and stops further scripts the user clicks "No"</description>
                </item>
                <item>
                    <term>5</term>
                    <description>Returns a URL to be opened in a new browser</description>
                </item>
                <item>
                    <term>6</term>
                    <description>Returns a form to be opened in Avatar</description>
                </item>
            </list>
            </para>    
                <example>
                Examples of common error codes:
                <list type="bullet">
                    <item>
                        <term>1</term>
                        <description>
                            Typically used when you want to display some information to the user, and prevent them from taking an action.<br />
                            <br />
                            For example, you want to let the user know that a field contains invalid data, they cannot proceed until they correct it.
                        </description>
                    </item>
                    <item>
                        <term>3</term>
                        <description>
                            Typically used when you would like to notify the user of something, but it is not critical to their current task.<br />
                            <br />
                            For example, you want to wish the users a happy birthday!.
                        </description>
                    </item>
                    <item>
                        <term>4</term>
                        <description>
                            A combination of the above two, where you want to display a message to the user, but also allow them to take an action.<br />
                            <br />
                            For example, you want to let the user know that there is a potential misspelling in their text, but they can choose to ignore it and proceed anyway.
                        </description>
                    </item>
                </list>
            </example>    
            </remarks>
            <param name="wsvcSession">The Tingen Session data structure object.</param>
            <param name="errCode">The OptionObject error code.</param>
            <param name="errMsg">The OptionObject error message.</param>
        </member>
        <member name="M:Outpost31.Core.Avatar.OptionObject.CheckExistance(ScriptLinkStandard.Objects.OptionObject2015)">
            <summary> Validates whether the provided <see cref="T:ScriptLinkStandard.Objects.OptionObject2015"/> instance exists.</summary>
            <param name="origOptObj">The <see cref="T:ScriptLinkStandard.Objects.OptionObject2015"/> instance to validate.</param>
            <returns>A string indicating the validation result.</returns>
        </member>
        <member name="M:Outpost31.Core.Blueprint.LogMsg.FormAccessDeniedGeneral">
            <summary>The Access Denied error code message.</summary>
            <returns>The Access Denied error code message.</returns>
        </member>
        <member name="M:Outpost31.Core.Blueprint.LogDetail.Runtime(Outpost31.Core.Runtime.WsvcRuntime)">
            <summary>The summary of the Tingen Web Service configuration at runtime.</summary>
            <return>A summary of the Tingen Web Service configuration at runtime.</return>
        </member>
        <member name="T:Outpost31.Core.Logger.LogBuilder">
            <summary>Generates various log components.</summary>
            <remarks>
                <note title="About this class">
                    There are three types of logs enerated by this class:
                    <list type="bullet">
                        <item><see cref="M:Outpost31.Core.Logger.LogBuilder.BasicLog(System.String,System.String,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogBuilder.DetailedLog(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogBuilder.TraceLog(System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String)"/></item>
                    </list>
                </note>
            </remarks>
            <seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.BasicLog(System.String,System.String,System.String)">
            <summary>Generates a basic log.</summary>
            <remarks>
                <para>
                    This method creates the following types of logs:
                    <list type="bullet">
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Critical(System.String,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Debuggler(System.String,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Primeval(System.String,System.String)"/></item>
                    </list>
                </para>
            </remarks>
            <param name="logType">The type of log to generate.</param>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="logMsg">The log message, which defaults to an empty string if not provided.</param>
            <returns>A dictionary containing the log path and content.</returns>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.DetailedLog(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>Generates a detailed log.</summary>
            <remarks>
                <para>
                    This method creates the following types of logs:
                    <list type="bullet">
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Debug(System.String,System.String,System.String,System.String,System.Int32,System.String)"/></item>
                    </list>
                </para>
            </remarks>
            <param name="logType">The type of log to generate.</param>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="exeAsm">The name of the assembly generating the log entry.</param>
            <param name="fromPath">The full path of the file being logged.</param>
            <param name="fromMethod">The name of the method being logged.</param>
            <param name="fromLine">The line number being logged.</param>
            <param name="logMsg">The log message, which defaults to an empty string if not provided.</param>
            <returns>A dictionary containing the log path and content.</returns>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.TraceLog(System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>Generates a Trace Log.</summary>
            <remarks>This method is typically used to create and retrieve detailed log entries for
            diagnostic or monitoring purposes. The returned dictionary provides both the storage location and the
            content of the log entry for further processing or display.</remarks>
            <param name="logType">The type of log to generate.</param>
            <param name="traceLevel">The <see cref="P:Outpost31.Core.Configuration.TngnWbsvConfiguration.TraceLevel"/> of the log</param>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="exeAsm">The name of the assembly generating the log entry.</param>
            <param name="fromPath">The full path of the file being logged.</param>
            <param name="fromMethod">The name of the method being logged.</param>
            <param name="fromLine">The line number being logged.</param>
            <param name="logMsg">The log message, which defaults to an empty string if not provided.</param>
            <returns>A dictionary containing the log path and content.</returns>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.BasePath(System.String,System.String)">
            <summary>Generates the base path for a log.</summary>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="logType">The type of log to generate.</param>
            <returns>The base path for the log.</returns>
            <value>Example: "C:\Tingen_Data\WebService\UAT\Logs\Debug"</value>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.FullPath(System.String,System.String)">
            <summary>Generates the full path for a log.</summary>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="logType">The type of log to generate.</param>
            <returns>The full path for the log.</returns>
            <value>Example: "C:\Tingen_Data\WebService\UAT\Logs\Debug\250519123322.debug"</value>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.BasicHeader(System.String)">
            <summary>Generates a basic log header.</summary>
            <param name="logType">The type of log to generate.</param>
            <returns>A string containing a basic log header.</returns>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.DetailedHeader(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Generates a detailed log header.</summary>
            <param name="logType">The type of log to generate.</param>
            <param name="exeAsm">The name of the assembly generating the log entry.</param>
            <param name="fromPath">The full path of the file being logged.</param>
            <param name="fromMethod">The name of the method being logged.</param>
            <param name="fromLine">The line number being logged.</param>
            <returns>A string containing a detailed log header.</returns>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.BasicContent(System.String,System.String)">
            <summary>Generates content for a basic log.</summary>
            <param name="logType">The type of log to generate.</param>
            <param name="logMsg">The log message, which defaults to an empty string if not provided.</param>
            <returns>A string that contains basic log content.</returns>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.DetailedContent(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>Generates content for a detailed log.</summary>
            <param name="logType">The type of log to generate.</param>
            <param name="avtrEnv">The environment or context in which the log is generated.</param>
            <param name="asmName">The name of the assembly where the log originates.</param>
            <param name="fromPath">The full path of the file being logged.</param>
            <param name="fromMethod">The name of the method being logged.</param>
            <param name="fromLine">The line number being logged.</param>
            <param name="logMsg">The log message, which defaults to an empty string if not provided.</param>
            <returns>A string that contains basic log content.</returns>
        </member>
        <member name="M:Outpost31.Core.Logger.LogBuilder.GetFromClassName(System.String)">
            <summary>Extracts the class name from a given file path.</summary>
            <remarks>
                <para>
                The full file path of the class is passed to this method, but we<br/>
                just need the class name.
                </para>
            </remarks>
            <param name="fromPath">The path from which to extract the class name.</param>
            <returns>The name of the class.</returns>
        </member>
        <member name="T:Outpost31.Core.Logger.LogEvent">
            <summary>Methods for logging various types of events.</summary>
            <remarks>
                <note title="About this class">
                    The following types of logs are supported:
                    <list type="bullet">
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Critical(System.String,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Debug(System.String,System.String,System.String,System.String,System.Int32,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Debuggler(System.String,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Primeval(System.String,System.String)"/></item>
                        <item><see cref="M:Outpost31.Core.Logger.LogEvent.Trace(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String)"/></item>
                    </list>
                </note>
            </remarks>
            <seealso href="https://github.com/spectrum-health-systems/tingen-documentation/blob/main/static/tngnwsvc/logging.md">Logging documentation</seealso>
            <seealso href="https://github.com/spectrum-health-systems/tingen-documentation-project">Tingen Documentation Project</seealso>
        </member>
        <member name="M:Outpost31.Core.Logger.LogEvent.Critical(System.String,System.String)">
            <summary>Critical logs indicate a significant failure with the Tingen Web Service.</summary>
            <param name="avtrEnvironment">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="logMessage">The log message to write.</param>
            <seealso href="https://github.com/spectrum-health-systems/tingen-documentation/blob/main/static/tngnwsvc/logging.md#critical-logs">Critical log documentation</seealso>
        </member>
        <member name="M:Outpost31.Core.Logger.LogEvent.Debug(System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>Debug logs are used when developing the Tingen Web Service.</summary>
            <remarks>
                <para>
                    Debug logs should be commented out in production code, or removed<br/>
                    if they are not needed.<br/>
                </para>
                <para>
                    Syntax:
                    <code>
                        TODO: Add syntax here.
                    </code>
                </para>
            </remarks>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="exeAsm">The name of the assembly generating the log entry.</param>
            <param name="fromPath">The full path of the file being logged.</param>
            <param name="fromMethod">The name of the method being logged.</param>
            <param name="fromLine">The line number being logged.</param>
            <param name="logMsg">The log message, which defaults to "Debug log." if not specified.</param>
        </member>
        <member name="M:Outpost31.Core.Logger.LogEvent.Debuggler(System.String,System.String)">
            <summary>Debuggler logs are temporary logs used when you want to debug something specific.</summary>
            <remarks>
                <para>
                    Debug logs should removed before deploying to production.<br/>
                    <br/>
                    Since debuggler logs may be written very quickly, there is a 1000ms delay<br/>
                    before committing to file.
                </para>
                <para>
                   Syntax:
                    <code>
                        LogEvent.Debuggler(wbsvEnvironment, "Your message here.");
                    </code>
                </para>
            </remarks>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="logMsg">The log message, which defaults to "Debuggler log." if not specified.</param>
        </member>
        <member name="M:Outpost31.Core.Logger.LogEvent.Primeval(System.String,System.String)">
            <summary>Primeval logs are used when the advanced logging infrastructure isn't available.</summary>
            <remarks>
                <para>
                    Primeval logs should removed before deploying to production.<br/>
                    <br/>
                    Since primeval logs may be written very quickly, there is a 1000ms delay<br/>
                    before committing data.
                </para>
                <para>
                   Syntax:
                    <code>
                        LogEvent.Primeval(wbsvEnvironment, "Your message here.");
                    </code>
                </para>
            </remarks>
            <param name="avtrEnv">The Avatar environment that the Tingen Web Service has interfaced with.</param>
            <param name="logMsg">The log message, which defaults to "Primeval log." if not specified.</param>
        </member>
        <member name="M:Outpost31.Core.Logger.LogEvent.Trace(System.Int32,System.String,System.String,System.String,System.String,System.Int32,System.String)">
            <summary>Trace Logs are used for debugging and tracking the flow of the application.</summary>
            <remarks>
                <para>
                    Trace logs work a little differently than other logs. They are assigned a "<c>TraceLevel</c>" between 0 and 9,<br/>
                    which is defined in <c>Tingen_Data\WebService\%avtrEnv%\Config\Runtime\TngnWbsv.config</c>:
                    <list type="bullet">
                        <item>0 - None</item>
                        <item>1 - Methods</item>
                        <item>2 - Conditional statements</item>
                        <item>9 - All</item>
                    </list>
                </para>
                <para>
                    Each TraceLevel is cumulative, so if you set the level to "5", it will also include all logs<br/>
                    from TraceLevels 1-4. Care should be taken to not set the level too high in production, since<br/>
                    it can impact performance and generate a large amount of log files.<br/>
                    <br/>
                    As long as the web service is functioning as expected, the TraceLevel should be set to "0"<br/>
                    <br/>
                    Since the TraceLevel handles what Trace Logs are written, Trace Log statements should not be<br/>
                    commented out of production code.<br/>
                </para>
                <para>
                    Syntax:
                    <code>
                        TODO: Add syntax here.
                    </code>
                </para>
            </remarks>
            <param name="traceLevel">The Trace Log level.</param>
            <param name="avtrEnv">The Avatar environment that interfaces with the Tingen Web Service.</param>
            <param name="exeAsm">The name of the assembly generating the trace.</param>
            <param name="fromPath">The full path of the file being logged.</param>
            <param name="fromMethod">The name of the method being logged.</param>
            <param name="fromLine">The line number being logged.</param>
            <param name="logMsg">The message to include in the trace log. Defaults to "No message." if not specified.</param>
        </member>
        <member name="M:Outpost31.Core.Logger.LogWriter.WriteLogToFile(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>Writes log content to a local file.</summary>
            <param name="logComponent">A dictionary containing the file path and log content.  The key <c>"FullPath"</c> specifies the full path to
            the file,  and the key <c>"LogContent"</c> specifies the content to be written.</param>
        </member>
        <member name="T:Outpost31.Core.Request.PrototypeRequest">
            <summary>Handles prototype requests.</summary>
        </member>
        <member name="M:Outpost31.Core.Request.PrototypeRequest.Parse(Outpost31.Core.Session.WsvcSession)">
            <summary>Parse the request and call the appropriate module.</summary>
        </member>
        <member name="T:Outpost31.Core.Request.StandardRequest">
            <summary>Handles standard requests.</summary>
        </member>
        <member name="M:Outpost31.Core.Request.StandardRequest.Parse(Outpost31.Core.Session.WsvcSession)">
            <summary>Parse the request and call the appropriate module.</summary>
        </member>
        <member name="M:Outpost31.Core.Request.StandardRequest.Admin(Outpost31.Core.Session.WsvcSession)">
            <summary>Admin requests.</summary>
        </member>
        <member name="M:Outpost31.Core.Request.StandardRequest.FormAccess(Outpost31.Core.Session.WsvcSession)">
            <summary>Form access requests.</summary>
        </member>
        <member name="M:Outpost31.Core.Request.StandardRequest.FormAccessFromList(Outpost31.Core.Session.WsvcSession)">
            <summary>Form access from a list.</summary>
        </member>
        <member name="T:Outpost31.Core.Runtime.WsvcRuntime">
            <summary>Runtime settings for the Tingen Web Service.</summary>
            <remarks>
                <para>
                    This class is used to set the runtime configurations for the Tingen Web Service.
                </para>
            </remarks><seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.TngnWsvcVer">
            <summary>The Tingen Web Service version number.</summary>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.TngnWsvcBuild">
            <summary>The Tingen Web Service build number.</summary>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.TngnWsvcAvtrSys">
            <summary>The Avatar System that the Tingen Web Service will interface with.</summary>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.TngnWsvcMode">
            <summary>The Tingen Web Service mode.</summary>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.TngnWsvcDataPath">
            <summary>The Tingen Web Service data path.</summary>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.TngnWsvcHostName">
            <summary>The name of the machine running the Tingen Web Service.</summary>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.CurrentDate">
            <summary>The current date in YYMMDD format.</summary>
        </member>
        <member name="P:Outpost31.Core.Runtime.WsvcRuntime.CurrentTime">
            <summary>The current time in HHMMSS format.</summary>
        </member>
        <member name="M:Outpost31.Core.Runtime.WsvcRuntime.New(System.String,System.String)">
            <summary>Creates a new instance of the RuntimeSettings class.</summary>
            <returns>An object containing the runtime settings for the Tingen Web Service.</returns>
            <remarks>
                <para>
                    This method sets all runtime settings for the Tingen Web Service.
                </para>
                <para>                 
                    The following runtime settings are loaded from external files:
                    <list type="bullet">
                        <item>
                            <b>tngnWbsvEnv</b><br />
                            The Avatar environment that the Tingen Web Service will interface with.<br />
                            This value is stored in the <c>.\AppData\Runtime\TngnWbsv.Env</c> file,<br />
                            and must be a valid Avatar environment.<br />
                            <i>If this file does not exist, the Tingen Web Service will not start.</i><br />
                        </item>
                        <item>
                            <b>tngnWbsvEnvDataPath</b><br />
                            The path on the machine that hosts the Tingen Web Service, where all data<br />
                            required by the Tingen Web Service will be stored. This is per-environment,<br />
                            and the first part of this path is hardcoded as <c>C:\Tingen_Data\</c>, so<br />
                            the directory must exist on the hosts machine.
                        </item>
                        <item>
                            <b>tngnWbsvMode</b><br />
                            The Avatar environment that the Tingen Web Service will interface with.<br />
                            This value is stored in the <c>.\AppData\Runtime\TngnWbsv.Env</c> file,<br />
                            and must be a valid Avatar environment.<br />
                            <i>If this file does not exist, the Tingen Web Service will not start.</i><br />
                        </item>
                    </list>
                </para>
                <para>
                    In addition to the above, this method also sets the Tingen Web Service <c>build</c> number,<br />
                    which is in <c>YYMMDD</c> format. This value must be updated whenever the Tingen Web Service<br />
                    is deployed to the host machine.
                </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Runtime.WsvcRuntime.GetTngnWbsvMode(System.String,System.Collections.Generic.List{System.String})">
            <summary>Get the contents of a file, and validate it.</summary>
            <param name="filePath">The file path.</param>
            <param name="validateAgainst">A list of values to validate against.</param>
            <returns>The valid contents of the file (or we exit the application).</returns>
            <!-- No matching elements were found for the following include tag --><include file="AppData/XmlDoc/Core.Runtime.xml" path="Core.Runtime/Class[@name=&quot;TngnWbsvRuntimeSettings&quot;]/TngnWbsvRuntimeSettings.New/*" />
        </member>
        <member name="M:Outpost31.Core.Runtime.WsvcRuntime.ValidTngnWbsvModes">
            <summary>Valid Tingen Web Service modes.</summary>
            <returns>A list of valid Tingen Web Service modes.</returns>
        </member>
        <member name="T:Outpost31.Core.Configuration.TngnWbsvConfiguration">
            <summary>Runtime setting logic for the Tingen Web Service.</summary>
            <remarks>
                <note title="About this class">
                    This class handles all configuration logic for the Tingen Web Service.<br/>
                    <list type="bullet">
                        <item>Should not be used in production</item>
                        <item>Is most likely super ugly</item>
                        <item>Probably doesn't follow best practices</item>
                    </list>
                </note>
            </remarks>
            <seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="M:Outpost31.Core.Configuration.TngnWbsvConfiguration.New(System.String)">
            <summary>Load the runtime settings for the Tingen Web Service.</summary>
            <param name="tngnWbsvVersion">The Tingen Web Service version</param>
            <returns>Runtime settings for the Tingen Web Service.</returns>
            <!-- No matching elements were found for the following include tag --><include file="AppData/XmlDoc/Core.Runtime.xml" path="Core.Runtime/Class[@name=&quot;TngnWbsvConfiguration&quot;]/ClassDescription/*" />
        </member>
        <member name="M:Outpost31.Core.Configuration.TngnWbsvConfiguration.TngnWbsvConfigSummary(Outpost31.Core.Configuration.TngnWbsvConfiguration,System.String)">
            <summary>The summary of the Tingen Web Service configuration at runtime.</summary>
            <return>A summary of the Tingen Web Service configuration at runtime.</return>
        </member>
        <member name="T:Outpost31.Core.Session.WsvcSession">
            <summary> Session logic for the Tingen Web Service.</summary>
        </member>
        <member name="P:Outpost31.Core.Session.WsvcSession.WsvcConfig">
            <summary>The Tingen Web Service configuration object.</summary>
            <remarks>The TngnWbsvConfig object contains all runtime and external configuration information.</remarks>
        </member>
        <member name="P:Outpost31.Core.Session.WsvcSession.OptObj">
            <summary>Gets or sets the optional object associated with the avatar.</summary>
        </member>
        <member name="P:Outpost31.Core.Session.WsvcSession.ScriptParam">
            <summary>The ScriptLink Script Parameter sent from Avatar.</summary>
        </member>
        <member name="P:Outpost31.Core.Session.WsvcSession.AvtrEnv">
            <summary>The Avatar System Code that this instance of the Tingen Web Service will interface with.</summary>
        </member>
        <member name="M:Outpost31.Core.Session.WsvcSession.New(ScriptLinkStandard.Objects.OptionObject2015,System.String,System.String,System.String)">
            <summary>Creates and initializes a new TngnWbsvSession object</summary>
            <param name="sentOptObj">The OptionObject that is sent from Avatar.</param>
            <param name="sentScriptParam">The Script Parameter that is sent from Avatar.</param>
            <param name="wsvcVer">The current version of the Tingen Web Service.</param>
            <returns>A new Tingen Web Service session object.</returns>
        </member>
        <member name="T:Outpost31.Core.Utility.Du.DuFile">
            <summary>Logic related to files input/output.</summary>
        </member>
        <member name="M:Outpost31.Core.Utility.Du.DuFile.ReadLocal(System.String)">
            <summary>Returns the contents or status of a file. </summary>
            <param name="filePath">The path to the file.</param>
            <remarks>
                <para>
                    If the file exists <i>and has content</i>, that content is returned.<br/>
                    <br/>
                    If the file <i>does not exist</i>, or exists <i>but is empty</i>, an error message is returned.
                </para>
            </remarks>
            <returns>The content or status of the file.</returns>
        </member>
        <member name="M:Outpost31.Core.Utility.Du.DuFile.ReadAndVerifyLocal(System.String,System.Collections.Generic.List{System.String})">
            <summary>Returns the contents (if valid) or status of a file. </summary>
            <param name="filePath">The path to the file.</param>
            <param name="validContent">A list of valid content.</param>
            <remarks>
                <para>
                    GetContent() returns the contents or status of the file.<br/>
                    <br/>
                    If the file contains data, that data is checked against the list of valid content.
                </para>
            </remarks>
            <returns>The verified content or status of the file.</returns>
        </member>
        <member name="M:Outpost31.Core.Utility.Du.DuJson.ExportToLocalFile``1(``0,System.String,System.Boolean)">
            <summary>Export JSON data to an external file.</summary>
            <typeparam name="JsonObject">The JSON object type.</typeparam>
            <param name="jsonObject">The JSON object.</param>
            <param name="filePath">The export file path.</param>
            <param name="formatJson">Determines if the JSON data is formatted.</param>
            <remarks>
                <para>
                    <example>
                        To export a nicely-formatted JSON object:
                        <code>
                            TheObject theObject = new TheObject();
                            DuJson.ExportToLocalFile&lt;TheObject&gt;(theObject, "/Path/To/Export/File");
                        </code>
                    </example>
                    <example>
                        To export an unformatted JSON object:
                        <code>
                            TheObject theObject = new TheObject();
                            DuJson.ExportToLocalFile&lt;TheObject&gt;(theObject, "/Path/To/Export/File", false);
                        </code>
                    </example>
                </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Utility.Du.DuJson.ImportFromLocalFile``1(System.String)">
            <summary>Import JSON data from an external file. [250108]</summary>
            <typeparam name="JsonObject">The JSON object type.</typeparam>
            <param name="filePath">The import file path.</param>
            <remarks>
                <para>
                    <example>
                        To import a JSON object from a local file:
                        <code>
                            TheObject theObject = DuJson.ImportFromLocalFile&lt;TheObject&gt;("/Path/To/Import/File");
                        </code>
                    </example>
                </para>
            </remarks>
            <returns>The contents of the file as a JSON object.</returns>
        </member>
        <member name="T:Outpost31.Core.Service.Spin">
            <summary>Startup/shutdown logic for the Tingen Web Service.</summary>
            <remarks>
                <note title="About this class">
                    Starup/shutdown class for the Tingen Web Service.
                </note>
            </remarks><seealso href="https://github.com/spectrum-health-systems/Tingen-Documentation">Tingen documentation</seealso>
        </member>
        <member name="P:Outpost31.Core.Service.Spin.ExeAsm">
            <summary>The executing Assembly name.</summary>
            <remarks>A required component for writing log files, defined here so it can be used throughout the class.</remarks>
        </member>
        <member name="M:Outpost31.Core.Service.Spin.Up(Outpost31.Core.Session.WsvcSession,ScriptLinkStandard.Objects.OptionObject2015,System.String,System.String,System.String)">
            <summary>Spin up a new instance of the Tingen Web Service.</summary>
            <param name="sentOptObj"></param>
            <param name="sentScriptParam"></param>
            <returns></returns>
        </member>
        <member name="M:Outpost31.Core.Service.Spin.Down">
            <summary>Spin down the Tingen Web Service.</summary>
            <!-- No matching elements were found for the following include tag --><include file="AppData/XmlDoc/Core.Runtime.xml" path="Core.Runtime/Class[@name=&quot;Spin&quot;]/Down/*" />
        </member>
        <member name="M:Outpost31.Module.Admin.Parse.Request(Outpost31.Core.Session.WsvcSession)">
            <summary>Admin requests.</summary>
        </member>
        <member name="M:Outpost31.Module.FormAccess.Deny.SysCodeDoc(Outpost31.Core.Session.WsvcSession)">
            <summary>Deny access to the form if the System Code is "DOC".</summary>
        </member>
        <member name="M:Outpost31.Module.FormAccess.Deny.SysCodeDocHoc(Outpost31.Core.Session.WsvcSession)">
            <summary>Deny access to the form if the System Code is "DOC" or starts with "HOC".</summary>
        </member>
        <member name="M:Outpost31.Module.FormAccess.Deny.SysCodeFromList(Outpost31.Core.Session.WsvcSession,System.Collections.Generic.List{System.String})">
            <summary>Deny access to the form if the System Code is a member of a list.</summary>
        </member>
        <member name="T:Outpost31.Module.Prototype.Code">
            <summary>Prototype code</summary>
        </member>
        <member name="M:Outpost31.Module.Prototype.Code.FormAccessDocSysCodeDeny(Outpost31.Core.Session.WsvcSession)">
            <summary>Deny access to the form for anyone using the DOC System Code.</summary>
            <remarks>This functionality was added as a standard request on 5-1-2025.</remarks>
        </member>
    </members>
</doc>
