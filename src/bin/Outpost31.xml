<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Outpost31</name>
    </assembly>
    <members>
        <member name="T:Outpost31.Core.Avatar.AvtrEnvironment">
            <summary>Represents the components of an Avatar Environment.</summary>
            <remarks>
                <para>
                The Avatar Environment represents the <see cref="!:AvtrSys"><i>System</i></see> and Avatar <see cref="!:AvtrSysCode"><i>System <b>Code</b></i></see>.<br />
                <br />
                While both contain the word <i>System</i>, they are not the same! It is important to understand the difference between the two.<br />
                <include file="AppData/XmlDoc/ProjectInfo.xml" path="ProjectInfo/Class[@name=&quot;Project&quot;]/Callback/*" />
            </para>
                <para>
                For more information about Outpost31, please see the <see cref="T:Outpost31.ProjectInfo">Outpost31 <b>ProjectInfo</b></see>.
            </para>
            </remarks>
        </member>
        <member name="P:Outpost31.Core.Admin.Deploy.ExeAsmName">
            <summary>The executing assembly name.</summary>
            <remarks>
                <!-- Failed to insert some or all of included XML --><include file="/AppData/XmlDoc/Common.xml" path="TngnOpto/Class[@name=&quot;Common&quot;]/ExeAsmName/*" />
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Admin.Deploy.RefreshAppData(System.String)">
            <summary>Refresh all AppData data/resources.</summary>
            <param name="avtrSys"></param>
        </member>
        <member name="M:Outpost31.Core.Admin.Deploy.CopyDirectory(System.String,System.String)">
            TODO move to a utility class
        </member>
        <member name="T:Outpost31.Core.Admin.Testing">
            <summary>Provides testing and debugging operations.</summary>
            <remarks>
                <para>
                The Tingen Web Service Web.config file has a setting named <c>AdminMode</c>, which can be used to perform
                several processes, including testing various components of the Tingen Web Service.
                <include file="AppData/XmlDoc/ProjectInfo.xml" path="ProjectInfo/Class[@name=&quot;Project&quot;]/Callback/*" />
            </para>
            </remarks>
        </member>
        <member name="P:Outpost31.Core.Admin.Testing.ExeAsmName">
            <summary>The executing assembly name.</summary>
            <remarks>
                <para>
                The name of the Executing Assembly is a required component of most log files, as it is used to identify
                the project that is creating the log.<br />
                <br />
                This is defined at the start of each class, so it can be used at any time that a log needs to be created.
            </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Admin.Testing.Regression(ScriptLinkStandard.Objects.OptionObject2015,System.String,System.String,System.String)">
            <summary>Runs regression tests.</summary>
            <remarks>
                <para>
                Regression tests various components of the Tingen Web Service.<br />
                <br />
                AdminMode = <c>RegressionTest</c>
            </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Admin.Testing.AppLogs(System.String,System.Int32)">
            <summary>Generates various application logs.</summary>
            <remarks>This method performs various logging operations, including critical, debug, error,
            and trace logs,  to verify the functionality and behavior of the application's logging system. It is
            intended for  internal use during regression testing or diagnostics.</remarks>
            <param name="avtrSys">The identifier for the avatar system or application context in which the logging operations are performed.</param>
            <param name="msec"></param>
        </member>
        <member name="T:Outpost31.Core.Admin.AdminMode">
            <summary>Tingen Web Service mode logic.</summary>
            <remarks>
                <para>
                The Tingen Web Service setting named <c>AdminMode</c>, which can be used to perform
                several different administrative processes<br />
                <br />
                For more information on AdminMode and it's settings, please see the Tingen Web Service
                <see href="https://github.com/spectrum-health-systems/tingen-documentation-project/tree/main/manuals/tngnsrvc">Tingen Web Service Manual</see>        
            </para>
                <para>
                For more information about Outpost31, please see the <see cref="T:Outpost31.ProjectInfo">Outpost31 <b>ProjectInfo</b></see>.
            </para>
            </remarks>
        </member>
        <member name="P:Outpost31.Core.Admin.AdminMode.ExeAsmName">
            <summary>The executing assembly name.</summary>
            <remarks>
                <para>
                The name of the Executing Assembly is a required component of most log files, as it is used to identify
                the project that is creating the log.<br />
                <br />
                This is defined at the start of each class, so it can be used at any time that a log needs to be created.
            </para>
            </remarks>
        </member>
        <member name="T:Outpost31.Core.Logger.LogAppEvent">
            <summary>Logs an event.</summary>
            <remarks>
                <para>
                Core.Logger.LogEvent external XML
            </para>
                <para>
                For more information about Outpost31, please see the <see cref="T:Outpost31.ProjectInfo">Outpost31 <b>ProjectInfo</b></see>.
            </para>
            </remarks>
        </member>
        <member name="P:Outpost31.Core.Logger.LogAppEvent.ExeAsmName">
            <summary>The executing assembly name.</summary>
            <remarks>
                <para>
                The name of the Executing Assembly is a required component of most log files, as it is used to identify
                the project that is creating the log.<br />
                <br />
                This is defined at the start of each class, so it can be used at any time that a log needs to be created.
            </para>
            </remarks>
        </member>
        <member name="M:Outpost31.Core.Logger.LogAppEvent.Critical(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Generate a critical log.</summary>
            <remarks>
            
            </remarks>
            <param name="avtrSys"></param>
            <param name="exeAsmName"></param>
            <param name="msec"></param>
            <param name="logName"></param>
            <param name="logBody"></param>
            <param name="fromClassPath"></param>
            <param name="fromMethod"></param>
            <param name="fromLine"></param>
        </member>
        <member name="M:Outpost31.Core.Logger.LogAppEvent.Primeval(System.String,System.Int32)">
            <summary>Primeval logs are used when the advanced logging infrastructure isn't available.</summary>
            <remarks>
                <para>
                Primeval logs can be utilized prior to building the logging infrastructure.<br />
                <br />
                Since primeval logs may be written very quickly, there is a 1000ms delay<br />
                before committing data.This can potentially cause performance issues.<br />
                <br />
                Syntax: <c>LogEvent.Primeval(avtrSys, "Optional message.");</c>
            </para>
            </remarks>
            <param name="avtrSys">The sys</param>
            <param name="logBody">The log message, which defaults to "Primeval log." if not specified.</param>
        </member>
        <member name="P:Outpost31.Module.Admin.Develop.ExeAsmName">
            <summary>The executing assembly name.</summary>
            <remarks>
                <!-- Failed to insert some or all of included XML --><include file="/AppData/XmlDoc/Common.xml" path="TngnOpto/Class[@name=&quot;Common&quot;]/ExeAsmName/*" />
            </remarks>
        </member>
        <member name="T:Outpost31.ProjectInfo">
            <summary>Provides additional information about Outpost31.</summary>
            <remarks>
                <para>
                <b>About Outpost31</b><br />
                Outpost 31 is the back-end/logic for the Tingen Web Service.
            </para>
                <para>
                <b>Project repositories</b><br />
                <see href="https://github.com/spectrum-health-systems/tingen-web-service">Tingen Web Service</see><br />
                <see href="https://github.com/spectrum-health-systems/outpost31">Outpost32</see>
            </para>
                <para>
                <b>Project documentation</b><br />
                <see href="https://github.com/spectrum-health-systems/tingen-documentation-project">Tingen Documentation Project</see><br />
                <see href="https://github.com/spectrum-health-systems/tingen-documentation-project/tree/main/manuals/tngnsrvc">Tingen Web Service Manual</see><br />
                <see href="https://github.com/spectrum-health-systems/tingen-documentation-project/tree/main/development">Development Documentation</see>
            </para>
            </remarks>
        </member>
    </members>
</doc>
